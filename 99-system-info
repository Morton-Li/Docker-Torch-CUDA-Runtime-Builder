#!/bin/bash

# ANSI 色彩定义
YELLOW='\033[1;33m'
GREEN='\033[1;32m'
BLUE='\033[1;34m'
RESET='\033[0m'

# 主机信息
OS_INFO=$(lsb_release -ds 2>/dev/null || cat /etc/os-release | grep '^PRETTY_NAME=' | cut -d= -f2 | tr -d '"')
KERNEL=$(uname -r)
ARCH=$(uname -m)
HOSTNAME=$(hostname)

# CPU 信息
CPU_MODEL=$(lscpu | grep "Model name" | sed 's/Model name:\s*//')
CPU_CORES=$(lscpu | awk '/^Core\(s\) per socket:/ {c=$4} /^Socket\(s\):/ {s=$2} END {print c * s}')
CPU_THREADS=$(lscpu | awk '/^CPU\(s\):/ {print $2}')
if [ -f /sys/fs/cgroup/cpu.max ]; then
    CPU_CG_MAX=$(cat /sys/fs/cgroup/cpu.max)
    MAX=$(echo "$CPU_CG_MAX" | awk '{print $1}')
    PERIOD=$(echo "$CPU_CG_MAX" | awk '{print $2}')
    if [ "$MAX" != "max" ]; then
        CPU_LIMIT=$(awk "BEGIN { printf \"%.2f\", $MAX / $PERIOD }")
    else
        CPU_LIMIT="unlimited"
    fi
else
    CPU_LIMIT="unknown"
fi

# 内存信息
MEM_TOTAL=$(free -h | awk '/^Mem:/ {print $2}')
MEM_USED=$(free -h | awk '/^Mem:/ {print $3}')
MEM_FREE=$(free -h | awk '/^Mem:/ {print $4}')
if [ -f /sys/fs/cgroup/memory.max ]; then
    MEM_LIMIT=$(cat /sys/fs/cgroup/memory.max)
    if [ "$MEM_LIMIT" = "max" ]; then
        MEM_LIMIT_HUMAN="unlimited"
    else
        MEM_LIMIT_HUMAN=$(numfmt --to=iec --suffix=B "$MEM_LIMIT")
    fi
else
    MEM_LIMIT_HUMAN="unknown"
fi

# GPU 信息
if command -v nvidia-smi &> /dev/null; then
    # 查询每张卡的详细信息
    mapfile -t GPU_DETAILS < <(nvidia-smi --query-gpu=index,name,memory.total,memory.used,memory.free,utilization.gpu --format=csv,noheader,nounits)
    GPU_COUNT=$(nvidia-smi --query-gpu=name --format=csv,noheader | wc -l)
    # 活跃 GPU 进程数（注意不区分卡）
    GPU_PROC_COUNT=$(nvidia-smi --query-compute-apps=pid --format=csv,noheader 2>/dev/null | wc -l)
else
    GPU_DETAILS=()
    GPU_COUNT="0"
    GPU_PROC_COUNT="0"
fi

# 磁盘信息（挂载在 / 的磁盘）
DISK_TOTAL=$(df -h / | awk 'NR==2 {print $2}')
DISK_USED=$(df -h / | awk 'NR==2 {print $3}')
DISK_AVAIL=$(df -h / | awk 'NR==2 {print $4}')

# 输出格式
printf "${GREEN} +--------------------------------------------------------------------------------------------------------+\n"
printf "${GREEN}   System:   ${RESET}%s\n" "$OS_INFO"
printf "${GREEN}   Kernel:   ${RESET}%s (%s)\n" "$KERNEL" "$ARCH"
printf "${GREEN}   Hostname: ${RESET}%s\n" "$HOSTNAME"
echo ""

printf "${GREEN}   CPU:      ${RESET}%s\n" "$CPU_MODEL"
printf "${GREEN}   Cores:    ${RESET}%s physical / %s threads\n" "$CPU_CORES" "$CPU_THREADS"
printf "${GREEN}   CPU Limit (cgroup):   ${RESET}%s cores\n" "$CPU_LIMIT"
echo ""

printf "${GREEN}   Memory:   ${RESET}%s total / %s used / %s free\n" "$MEM_TOTAL" "$MEM_USED" "$MEM_FREE"
printf "${GREEN}   Memory Limit (cgroup):${RESET}%s\n" "$MEM_LIMIT_HUMAN"
echo ""

printf "${GREEN}   GPU(s):   ${RESET}%s\n" "$GPU_COUNT"
if [ "$GPU_COUNT" -gt 0 ]; then
    for gpu in "${GPU_DETAILS[@]}"; do
        IFS=',' read -r index name mem_total mem_used mem_free util <<< "$gpu"
        printf "${GREEN}   GPU %s:    ${RESET}%-24s | %3s%% usage | %5s / %5s / %5s MiB (used/total/free)\n" "$index" "$name" "$util" "$mem_used" "$mem_total" "$mem_free"
    done
else
    printf "${GREEN}             ${RESET}N/A\n"
fi
printf "${GREEN}   GPU Active Processes: ${RESET}%s\n" "$GPU_PROC_COUNT"
echo ""

printf "${GREEN}   Disk:     ${RESET}%s total / %s used / %s available (on /)\n" "$DISK_TOTAL" "$DISK_USED" "$DISK_AVAIL"
printf "${GREEN} +--------------------------------------------------------------------------------------------------------+\n"
printf "${RESET}"

echo ""
